diff --git a/drivers/input/touchscreen/edt-ft5x06.c b/drivers/input/touchscreen/edt-ft5x06.c
index 1e18ca0d1b4e..7cb1b931639d 100644
--- a/drivers/input/touchscreen/edt-ft5x06.c
+++ b/drivers/input/touchscreen/edt-ft5x06.c
@@ -176,9 +176,10 @@ static irqreturn_t edt_ft5x06_ts_isr(int irq, void *dev_id)
 	struct device *dev = &tsdata->client->dev;
 	u8 cmd;
 	u8 rdbuf[63];
-	int i, type, x, y, id;
+	int n, i, type, x, y, id;
 	int offset, tplen, datalen, crclen;
 	int error;
+	int READ_PER_INTERRUPT = 20;
 
 	switch (tsdata->version) {
 	case EDT_M06:
@@ -200,63 +201,66 @@ static irqreturn_t edt_ft5x06_ts_isr(int irq, void *dev_id)
 	default:
 		goto out;
 	}
+	
+	for (n = 0; n < READ_PER_INTERRUPT; ++n) {
 
-	memset(rdbuf, 0, sizeof(rdbuf));
-	datalen = tplen * tsdata->max_support_points + offset + crclen;
+		memset(rdbuf, 0, sizeof(rdbuf));
+		datalen = tplen * tsdata->max_support_points + offset + crclen;
 
-	error = edt_ft5x06_ts_readwrite(tsdata->client,
-					sizeof(cmd), &cmd,
-					datalen, rdbuf);
-	if (error) {
-		dev_err_ratelimited(dev, "Unable to fetch data, error: %d\n",
-				    error);
-		goto out;
-	}
-
-	/* M09/M12 does not send header or CRC */
-	if (tsdata->version == EDT_M06) {
-		if (rdbuf[0] != 0xaa || rdbuf[1] != 0xaa ||
-			rdbuf[2] != datalen) {
-			dev_err_ratelimited(dev,
-					"Unexpected header: %02x%02x%02x!\n",
-					rdbuf[0], rdbuf[1], rdbuf[2]);
+		error = edt_ft5x06_ts_readwrite(tsdata->client,
+						sizeof(cmd), &cmd,
+						datalen, rdbuf);
+		if (error) {
+			dev_err_ratelimited(dev, "Unable to fetch data, error: %d\n",
+						error);
 			goto out;
 		}
 
-		if (!edt_ft5x06_ts_check_crc(tsdata, rdbuf, datalen))
-			goto out;
-	}
+		/* M09/M12 does not send header or CRC */
+		if (tsdata->version == EDT_M06) {
+			if (rdbuf[0] != 0xaa || rdbuf[1] != 0xaa ||
+				rdbuf[2] != datalen) {
+				dev_err_ratelimited(dev,
+						"Unexpected header: %02x%02x%02x!\n",
+						rdbuf[0], rdbuf[1], rdbuf[2]);
+				goto out;
+			}
+
+			if (!edt_ft5x06_ts_check_crc(tsdata, rdbuf, datalen))
+				goto out;
+		}
 
-	for (i = 0; i < tsdata->max_support_points; i++) {
-		u8 *buf = &rdbuf[i * tplen + offset];
-		bool down;
+		for (i = 0; i < tsdata->max_support_points; i++) {
+			u8 *buf = &rdbuf[i * tplen + offset];
+			bool down;
 
-		type = buf[0] >> 6;
-		/* ignore Reserved events */
-		if (type == TOUCH_EVENT_RESERVED)
-			continue;
+			type = buf[0] >> 6;
+			/* ignore Reserved events */
+			if (type == TOUCH_EVENT_RESERVED)
+				continue;
 
-		/* M06 sometimes sends bogus coordinates in TOUCH_DOWN */
-		if (tsdata->version == EDT_M06 && type == TOUCH_EVENT_DOWN)
-			continue;
+			/* M06 sometimes sends bogus coordinates in TOUCH_DOWN */
+			if (tsdata->version == EDT_M06 && type == TOUCH_EVENT_DOWN)
+				continue;
 
-		x = ((buf[0] << 8) | buf[1]) & 0x0fff;
-		y = ((buf[2] << 8) | buf[3]) & 0x0fff;
-		id = (buf[2] >> 4) & 0x0f;
-		down = type != TOUCH_EVENT_UP;
+			x = ((buf[0] << 8) | buf[1]) & 0x0fff;
+			y = ((buf[2] << 8) | buf[3]) & 0x0fff;
+			id = (buf[2] >> 4) & 0x0f;
+			down = type != TOUCH_EVENT_UP;
 
-		input_mt_slot(tsdata->input, id);
-		input_mt_report_slot_state(tsdata->input, MT_TOOL_FINGER, down);
+			input_mt_slot(tsdata->input, id);
+			input_mt_report_slot_state(tsdata->input, MT_TOOL_FINGER, down);
 
-		if (!down)
-			continue;
+			if (!down)
+				continue;
 
-		touchscreen_report_pos(tsdata->input, &tsdata->prop, x, y,
-				       true);
-	}
+			touchscreen_report_pos(tsdata->input, &tsdata->prop, x, y,
+						true);
+		}
 
-	input_mt_report_pointer_emulation(tsdata->input, true);
-	input_sync(tsdata->input);
+		input_mt_report_pointer_emulation(tsdata->input, true);
+		input_sync(tsdata->input);
+	}
 
 out:
 	return IRQ_HANDLED;
