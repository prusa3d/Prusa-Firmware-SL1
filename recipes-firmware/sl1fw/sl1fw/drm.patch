diff --git a/firmware/sl1fw/libScreen.py b/firmware/sl1fw/libScreen.py
index c876260..a05d8a5 100644
--- a/sl1fw/libScreen.py
+++ b/sl1fw/libScreen.py
@@ -14,6 +14,11 @@ import numpy
 import zipfile
 from cStringIO import StringIO
 
+from PIL import Image
+from PIL import ImageDraw
+from PIL import ImageFont
+from pydrm import *
+
 class ImagePreloader(threading.Thread):
 
     def __init__(self, source, overlays, workQueue, resultQueue):
@@ -71,13 +76,15 @@ class ImagePreloader(threading.Thread):
 
 
 class Screen(object):
+    drm = SimpleDrm(conn="HDMI-A-1", format='XR24')
 
     def __init__(self, hwConfig, source):
         #self.logger = logging.getLogger(__name__)
         os.environ['SDL_NOMOUSE'] = '1'
+        os.environ['SDL_VIDEODRIVER'] = 'dummy'
         pygame.display.init()
         pygame.font.init()
-        self.screen = pygame.display.set_mode((0,0), pygame.FULLSCREEN)
+        self.screen = pygame.display.set_mode((1440,2560), pygame.FULLSCREEN, 32)
         self.screen.set_alpha(None)
         pygame.mouse.set_visible(False)
         self.getImgBlack()
@@ -113,12 +120,19 @@ class Screen(object):
     def getImgBlack(self):
         self.screen.fill((0,0,0))
         pygame.display.flip()
+        self.writefb()
     #enddef
 
     def fillArea(self, area, color = (0,0,0)):
         pygame.display.update(self.screen.fill(color, area))
     #enddef
 
+    def writefb(self):
+        image = Image.frombytes(mode='RGB', size=(self.screen.get_size()), data=pygame.image.tostring(self.screen,'RGB'))
+        image.convert('RGBX')
+        Screen.drm.image.paste(image)
+        Screen.drm.flush()
+
     def getImg(self, filename, base = None):
         # obrazky jsou rozbalene nebo zkopirovane do ramdisku
         if base is None:
@@ -128,6 +142,7 @@ class Screen(object):
         obr = pygame.image.load(os.path.join(base, filename)).convert()
         self.screen.blit(obr, (0,0))
         pygame.display.flip()
+        self.writefb()
         #self.logger.debug("view of %s done", base + filename)
     #enddef
 
@@ -144,6 +159,7 @@ class Screen(object):
         #self.logger.debug("blit started")
         self.screen.blit(obr, (0,0))
         pygame.display.flip()
+        self.writefb()
         #self.logger.debug("blit done")
         return whitePixels
     #enddef
@@ -153,6 +169,7 @@ class Screen(object):
         pixels ^= 2 ** 32 - 1
         del pixels
         pygame.display.flip()
+        self.writefb()
     #enddef
 
     def createCalibrationOverlay(self, areas, baseTime, timeStep):
@@ -187,6 +204,7 @@ class Screen(object):
         self.screen.blit(self.calibOverlays[0], (0,0))
         self.screen.blit(self.calibOverlays[1], (0,0))
         pygame.display.flip()
+        self.writefb()
     #enddef
 
 #endclass
