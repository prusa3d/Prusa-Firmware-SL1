--- a/sl1fw/libScreen.py	2018-11-19 13:22:40.429000080 +0100
+++ b/sl1fw/libScreen.py	2018-11-19 14:38:51.645002260 +0100
@@ -73,19 +73,20 @@
 class Screen(object):
 
     def __init__(self, hwConfig, source):
         #self.logger = logging.getLogger(__name__)
         os.environ['SDL_NOMOUSE'] = '1'
+        os.environ['SDL_VIDEODRIVER'] = 'dummy'
         pygame.display.init()
         pygame.font.init()
-        self.screen = pygame.display.set_mode((0,0), pygame.FULLSCREEN)
+        self.screen = pygame.display.set_mode((1440,2560), pygame.FULLSCREEN, 32)
         self.screen.set_alpha(None)
         pygame.mouse.set_visible(False)
         self.getImgBlack()
         self.font = pygame.font.SysFont(None, int(5 / hwConfig.pixelSize))
         self.basepath = source
         di = pygame.display.Info()
         self.width = di.current_w
         self.height = di.current_h
         #self.logger.debug("screen size is %dx%d pixels", self.width, self.height)
         self.calibOverlays = None
         self.imagePreloaderStarted = False
@@ -113,12 +114,17 @@
     def getImgBlack(self):
         self.screen.fill((0,0,0))
         pygame.display.flip()
+        self.writefb()
     #enddef
 
     def fillArea(self, area, color = (0,0,0)):
         pygame.display.update(self.screen.fill(color, area))
     #enddef
 
+    def writefb(self):
+        with open('/dev/fb0', 'wb') as fb:
+            fb.write(self.screen.get_buffer())
+
     def getImg(self, filename, base = None):
         # obrazky jsou rozbalene nebo zkopirovane do ramdisku
         if base is None:
@@ -128,6 +134,7 @@
         obr = pygame.image.load(os.path.join(base, filename)).convert()
         self.screen.blit(obr, (0,0))
         pygame.display.flip()
+        self.writefb()
         #self.logger.debug("view of %s done", base + filename)
     #enddef
 
@@ -144,6 +151,7 @@
         #self.logger.debug("blit started")
         self.screen.blit(obr, (0,0))
         pygame.display.flip()
+        self.writefb()
         #self.logger.debug("blit done")
         return whitePixels
     #enddef
@@ -153,6 +161,7 @@
         pixels ^= 2 ** 32 - 1
         del pixels
         pygame.display.flip()
+        self.writefb()
     #enddef
 
     def createCalibrationOverlay(self, areas, baseTime, timeStep):
@@ -187,6 +196,7 @@
         self.screen.blit(self.calibOverlays[0], (0,0))
         self.screen.blit(self.calibOverlays[1], (0,0))
         pygame.display.flip()
+        self.writefb()
     #enddef
 
 #endclass
