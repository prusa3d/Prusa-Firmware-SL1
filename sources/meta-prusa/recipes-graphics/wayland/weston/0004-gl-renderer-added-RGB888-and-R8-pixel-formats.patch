From b765c3b80a106b848909c0a76258247f83e5ef29 Mon Sep 17 00:00:00 2001
From: Roman Beranek <roman.beranek@prusa3d.com>
Date: Fri, 21 May 2021 00:17:09 +0200
Subject: [PATCH] gl-renderer: added RGB888 and R8 pixel formats

---
 libweston/renderer-gl/fragment.glsl          |  4 ++++
 libweston/renderer-gl/gl-renderer-internal.h |  1 +
 libweston/renderer-gl/gl-renderer.c          | 23 +++++++++++++++++++-
 libweston/renderer-gl/gl-shaders.c           |  1 +
 4 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/libweston/renderer-gl/fragment.glsl b/libweston/renderer-gl/fragment.glsl
index 63a20cd6..6ad78f20 100644
--- a/libweston/renderer-gl/fragment.glsl
+++ b/libweston/renderer-gl/fragment.glsl
@@ -41,6 +41,7 @@
 #define SHADER_VARIANT_XYUV     6
 #define SHADER_VARIANT_SOLID    7
 #define SHADER_VARIANT_EXTERNAL 8
+#define SHADER_VARIANT_BGR      9
 
 /* enum gl_shader_color_curve */
 #define SHADER_COLOR_CURVE_IDENTITY 0
@@ -128,6 +129,9 @@ sample_input_texture()
 	if (c_variant == SHADER_VARIANT_RGBX)
 		return vec4(texture2D(tex, v_texcoord).rgb, 1.0);
 
+	if (c_variant == SHADER_VARIANT_BGR)
+		return texture2D(tex, v_texcoord).bgra;
+
 	/* Requires conversion to RGBA */
 
 	if (c_variant == SHADER_VARIANT_Y_U_V) {
diff --git a/libweston/renderer-gl/gl-renderer-internal.h b/libweston/renderer-gl/gl-renderer-internal.h
index 72101b47..4e048993 100644
--- a/libweston/renderer-gl/gl-renderer-internal.h
+++ b/libweston/renderer-gl/gl-renderer-internal.h
@@ -48,6 +48,7 @@ enum gl_shader_texture_variant {
 	SHADER_VARIANT_XYUV,
 	SHADER_VARIANT_SOLID,
 	SHADER_VARIANT_EXTERNAL,
+	SHADER_VARIANT_BGR,
 };
 
 /* Keep the following in sync with fragment.glsl. */
diff --git a/libweston/renderer-gl/gl-renderer.c b/libweston/renderer-gl/gl-renderer.c
index a5f5eae4..87cbf9fb 100644
--- a/libweston/renderer-gl/gl-renderer.c
+++ b/libweston/renderer-gl/gl-renderer.c
@@ -1961,6 +1961,7 @@ gl_renderer_attach_shm(struct weston_surface *es, struct weston_buffer *buffer,
 	struct gl_surface_state *gs = get_surface_state(es);
 	GLenum gl_format[3] = {0, 0, 0};
 	GLenum gl_pixel_type;
+	uint32_t format = wl_shm_buffer_get_format(shm_buffer);
 	int pitch;
 	int num_planes;
 	bool using_glesv2 = gr->gl_version < gr_gl_version(3, 0);
@@ -1974,7 +1975,7 @@ gl_renderer_attach_shm(struct weston_surface *es, struct weston_buffer *buffer,
 	gs->hsub[0] = 1;
 	gs->vsub[0] = 1;
 
-	switch (wl_shm_buffer_get_format(shm_buffer)) {
+	switch (format) {
 	case WL_SHM_FORMAT_XRGB8888:
 		gs->shader_variant = SHADER_VARIANT_RGBX;
 		pitch = wl_shm_buffer_get_stride(shm_buffer) / 4;
@@ -1989,6 +1990,23 @@ gl_renderer_attach_shm(struct weston_surface *es, struct weston_buffer *buffer,
 		gl_pixel_type = GL_UNSIGNED_BYTE;
 		es->is_opaque = false;
 		break;
+	case WL_SHM_FORMAT_RGB888:
+	case WL_SHM_FORMAT_BGR888:
+		gs->shader_variant = format == WL_SHM_FORMAT_BGR888
+				   ? SHADER_VARIANT_BGR
+				   : SHADER_VARIANT_RGBA;
+		pitch = wl_shm_buffer_get_stride(shm_buffer) / 3;
+		gl_format[0] = GL_RGB;
+		gl_pixel_type = GL_UNSIGNED_BYTE;
+		es->is_opaque = true;
+		break;
+	case WL_SHM_FORMAT_R8:
+		gs->shader_variant = SHADER_VARIANT_RGBA;
+		pitch = wl_shm_buffer_get_stride(shm_buffer);
+		gl_format[0] = GL_LUMINANCE;
+		gl_pixel_type = GL_UNSIGNED_BYTE;
+		es->is_opaque = true;
+		break;
 	case WL_SHM_FORMAT_RGB565:
 		gs->shader_variant = SHADER_VARIANT_RGBX;
 		pitch = wl_shm_buffer_get_stride(shm_buffer) / 2;
@@ -3752,6 +3770,9 @@ gl_renderer_display_create(struct weston_compositor *ec,
 		goto fail_with_error;
 	}
 
+	wl_display_add_shm_format(ec->wl_display, WL_SHM_FORMAT_R8);
+	wl_display_add_shm_format(ec->wl_display, WL_SHM_FORMAT_RGB888);
+	wl_display_add_shm_format(ec->wl_display, WL_SHM_FORMAT_BGR888);
 	wl_display_add_shm_format(ec->wl_display, WL_SHM_FORMAT_RGB565);
 	wl_display_add_shm_format(ec->wl_display, WL_SHM_FORMAT_YUV420);
 	wl_display_add_shm_format(ec->wl_display, WL_SHM_FORMAT_NV12);
diff --git a/libweston/renderer-gl/gl-shaders.c b/libweston/renderer-gl/gl-shaders.c
index 97f288c0..9b14a514 100644
--- a/libweston/renderer-gl/gl-shaders.c
+++ b/libweston/renderer-gl/gl-shaders.c
@@ -78,6 +78,7 @@ gl_shader_texture_variant_to_string(enum gl_shader_texture_variant v)
 	CASERET(SHADER_VARIANT_XYUV)
 	CASERET(SHADER_VARIANT_SOLID)
 	CASERET(SHADER_VARIANT_EXTERNAL)
+	CASERET(SHADER_VARIANT_BGR)
 #undef CASERET
 	}
 
-- 
2.31.1

