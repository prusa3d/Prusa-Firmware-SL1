From 9f1102207bc913a91de1605e63108596f175d255 Mon Sep 17 00:00:00 2001
From: Roman Beranek <roman.beranek@prusa3d.com>
Date: Tue, 13 Jul 2021 09:18:39 +0200
Subject: [PATCH] tc358870: only proceed with setup if sl1-uv-led found in a
 FDT

"prusa,sl1-uv-led" node serves as a proxy for distinguishing between pre- and post-
1.6.0 systems.
---
 board/sunxi/board.c                 | 34 -------------------
 board/sunxi/panel-detector-uclass.c | 52 +++++++++++++++++++++++++++++
 2 files changed, 52 insertions(+), 34 deletions(-)

diff --git a/board/sunxi/board.c b/board/sunxi/board.c
index 441b01d12d..fc6b6e3911 100644
--- a/board/sunxi/board.c
+++ b/board/sunxi/board.c
@@ -990,27 +990,6 @@ int board_late_init(void)
 #ifdef CONFIG_USB_ETHER
 	usb_ether_init();
 #endif
-#ifdef CONFIG_BRIDGED_PANEL_DETECTION
-	int r;
-	struct udevice *detector;
-	char const *panel_name;
-	char *edid_arg;
-	size_t edid_arg_length;
-
-	r = uclass_first_device(UCLASS_PANEL_DETECTOR, &detector);
-	if (r)
-		return r;
-	panel_name = panel_detector_get_panel_name(detector);
-	if (strlen(panel_name)) {
-		edid_arg_length = 37 + strlen(panel_name);
-		edid_arg = kmalloc(edid_arg_length, GFP_KERNEL);
-		snprintf(edid_arg, edid_arg_length, "drm.edid_firmware=HDMI-A-1:edid/%s.bin", panel_name);
-		printf("panel_detector: found %s panel\n", panel_name);
-	} else {
-		edid_arg = "video=HDMI-A-1:d";
-	}
-	env_set("edid_bootarg", edid_arg);
-#endif
 
 	return 0;
 }
@@ -1063,19 +1042,6 @@ int ft_board_setup(void *blob, struct bd_info *bd)
 	r = sunxi_simplefb_setup(blob);
 	if (r)
 		return r;
-#endif
-#ifdef CONFIG_BRIDGED_PANEL_DETECTION
-	int offset;
-	struct udevice *detector;
-
-	r = uclass_first_device(UCLASS_PANEL_DETECTOR, &detector);
-	if (r)
-		return r;
-	offset = fdt_node_offset_by_compatible(blob, -1, "toshiba,tc358870");
-	if (offset < 0)
-		return offset;
-
-	panel_detector_fill_in_fdt_node(detector, blob, offset);
 #endif
 	return 0;
 }
diff --git a/board/sunxi/panel-detector-uclass.c b/board/sunxi/panel-detector-uclass.c
index c9574aa479..2c50a8b69f 100644
--- a/board/sunxi/panel-detector-uclass.c
+++ b/board/sunxi/panel-detector-uclass.c
@@ -6,6 +6,7 @@
 
 #include <dm.h>
 #include <command.h>
+#include <malloc.h>
 #include <vsprintf.h>
 #include <dm/device-internal.h>
 #include "panel_detector.h"
@@ -153,6 +154,53 @@ static int do_panel_id_write_vendor_data(struct udevice *dev, char * const sn_st
 	return panel_detector_write_id_to_nvm(dev, data.numeric);
 }
 
+static int do_panel_id_setup(void)
+{
+	int offset, r;
+	struct udevice *detector;
+	char const *panel_name;
+	char *edid_arg;
+	size_t edid_arg_length;
+
+	env_set("edid_bootarg", "video=HDMI-A-1:d");
+	void *fdt = (void*) env_get_ulong("fdt_addr_r", 16, 0);
+	if (!fdt)
+		return -ENODATA;
+
+	if (fdt_node_offset_by_compatible(fdt, -1, "prusa,sl1-uv-led") < 0
+	    && fdt_node_check_compatible(fdt, 0, "prusa,prusa64-sl2") != 0) {
+		printf("prusa,sl1-uv-led missing from the loaded FDT, system probably too old for panel detection\n");
+		return 0;
+	}
+
+	offset = fdt_node_offset_by_compatible(fdt, -1, "toshiba,tc358870");
+	if (offset < 0)
+		return offset;
+
+	panel_name = env_get("PANEL_DETECTION_OVERRIDE");
+	if (panel_name != NULL) {
+		printf("Force-setting panel_name to '%s'\n", panel_name);
+		fdt_setprop_string(fdt, offset, "panel-name", panel_name);
+	}
+	r = uclass_first_device(UCLASS_PANEL_DETECTOR, &detector);
+	if (r)
+		fdt_setprop_string(fdt, offset, "status", "disabled");
+	else if (panel_name == NULL) {
+		panel_name = panel_detector_get_panel_name(detector);
+		panel_detector_fill_in_fdt_node(detector, fdt, offset);
+	}
+	if (panel_name != NULL && strlen(panel_name)) {
+		edid_arg_length = 37 + strlen(panel_name);
+		edid_arg = malloc(edid_arg_length);
+		snprintf(edid_arg, edid_arg_length, "drm.edid_firmware=HDMI-A-1:edid/%s.bin", panel_name);
+	} else {
+		edid_arg = "video=HDMI-A-1:d";
+	}
+	env_set("edid_bootarg", edid_arg);
+
+	return 0;
+}
+
 static int do_panel_id(struct cmd_tbl *cmdtp, int flag, int argc, char * const argv[])
 {
 	int r;
@@ -165,6 +213,9 @@ static int do_panel_id(struct cmd_tbl *cmdtp, int flag, int argc, char * const a
 	argc -= 2;
 	argv += 2;
 
+	if (!strcmp(cmd, "setup") && argc == 0)
+		return handle_error(do_panel_id_setup());
+
 	r = uclass_first_device(UCLASS_PANEL_DETECTOR, &dev);
 	if (r < 0)
 		return handle_error(r);
-- 
2.34.0

