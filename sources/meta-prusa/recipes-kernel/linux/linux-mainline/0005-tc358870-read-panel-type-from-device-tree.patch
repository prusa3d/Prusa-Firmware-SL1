From 61b72387ab56184a94756dfddc43a4b9577220fe Mon Sep 17 00:00:00 2001
From: Roman Beranek <roman.beranek@prusa3d.com>
Date: Thu, 10 Dec 2020 15:31:52 +0100
Subject: [PATCH] tc358870: read panel type from device tree

---
 .../gpu/drm/bridge/tc358870/tc358870_drv.c    | 47 +++++++++++++++++--
 1 file changed, 43 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/bridge/tc358870/tc358870_drv.c b/drivers/gpu/drm/bridge/tc358870/tc358870_drv.c
index 9aac05a7ec40..05e7c92fbe70 100644
--- a/drivers/gpu/drm/bridge/tc358870/tc358870_drv.c
+++ b/drivers/gpu/drm/bridge/tc358870/tc358870_drv.c
@@ -326,18 +326,57 @@ static int tc358870_init(struct tc358870 *tc_data)
 	return 0;
 }
 
+enum panel_type {
+	PANEL_TYPE_UNKNOWN,
+	PANEL_TYPE_LS055R1SX04,
+	PANEL_TYPE_RV059FBB,
+};
+
+static enum panel_type tc358870_get_panel_type(struct device *dev)
+{
+	int ret;
+	static const char *const names[] = {
+		[PANEL_TYPE_UNKNOWN]		= "",
+		[PANEL_TYPE_LS055R1SX04]	= "ls055r1sx04",
+		[PANEL_TYPE_RV059FBB]		= "rv059fbb",
+	};
+	const char *panel_name;
+	ret = of_property_read_string(dev->of_node, "panel-name", &panel_name);
+	if (ret < 0) return PANEL_TYPE_UNKNOWN;
+	ret = match_string(names, ARRAY_SIZE(names), panel_name);
+	return (ret < 0) ? PANEL_TYPE_UNKNOWN : ret;
+}
+
+static const struct tc358870_msg *tc358870_get_dsi_init_data(struct device *dev)
+{
+	static const struct tc358870_msg *const init_data[] = {
+		[PANEL_TYPE_UNKNOWN]		= NULL,
+		[PANEL_TYPE_LS055R1SX04]	= ls055r1sx04_dsi_init_data,
+		[PANEL_TYPE_RV059FBB]		= rv059fbb_dsi_init_data,
+	};
+	enum panel_type type = tc358870_get_panel_type(dev);
+	if (type < 0 || type >= ARRAY_SIZE(init_data))
+		return NULL;
+	return init_data[type];
+}
+
 static int tc358870_probe(struct i2c_client *client, const struct i2c_device_id *id)
 {
 	struct tc358870 *tc_data;
-	struct device *device = &client->dev;
+	struct device *dev = &client->dev;
 	int ret;
 
-	tc_data = devm_kzalloc(device, sizeof(*tc_data), GFP_KERNEL);
+	tc_data = devm_kzalloc(dev, sizeof(*tc_data), GFP_KERNEL);
 	if (!tc_data) return -ENOMEM;
 
 	tc_data->client = client;
-	tc_data->device = device;
-	tc_data->dsi_init_data = ls055r1sx04_dsi_init_data;
+	tc_data->device = dev;
+	tc_data->dsi_init_data = tc358870_get_dsi_init_data(dev);
+	if (!tc_data->dsi_init_data) {
+		dev_err(dev, "Invalid or missing 'panel-name' property\n");
+		return -EINVAL;
+	}
+
 	mutex_init(&tc_data->lock);
 
 	ret = tc358870_init(tc_data);
-- 
2.30.2

